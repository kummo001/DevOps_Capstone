version: "2.1"
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  docker: circleci/docker@2.1.2
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  run-lint:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
        
      - save_cache:
          paths:
          - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  build-and-push:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: run lint
          command: |
            cat $DOCKER_LOGIN
      - docker/check
      - docker/build:
          image: kummozz/kummo-flask-app
          tag: "1.0"
      - docker/push:
          image: kummozz/kummo-flask-app
          tag: "1.0"          
  deploy-eks:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Check cluster
          command: |
            VALIDATE=$(aws eks describe-cluster --name eks-capstone --query 'cluster.name')
            echo "$VALIDATE" > ~/validate
            if cat ~/validate | grep "eks-capstone"
            then
              echo "Cluster eks-capstone already exist. Skipping job"
              circleci-agent step halt
              exit 0
            else
              echo "Attempting to create the cluster eks-capstone"
            fi
      - aws-eks/create-cluster:
          cluster-name: eks-capstone
          nodegroup-name: eks-capstone-nodes
          node-type: t3.medium
          nodes-min: 2
          nodes-max: 3
workflows:
  deployment:
    jobs:
      - run-lint
      - build-and-push:
          requires: [run-lint]